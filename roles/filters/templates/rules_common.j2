*mangle
-I POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o {{ external_if }} -j TCPMSS --clamp-mss-to-pmtu
{% if ext_bridge_name %}
-I POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o {{ ext_bridge_name }} -j TCPMSS --clamp-mss-to-pmtu
{% endif %}
# VPN
-I POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o tun0 -j TCPMSS --clamp-mss-to-pmtu
COMMIT
#
*filter
-I FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
{% for item in internal %}
{%   if 'vlan' in internal[item] and internal[item]['vlan']|int != 0 and 'interface' in internal[item] %}
-I FORWARD -i {{ internal[item]['interface'] }}.{{ internal[item]['vlan'] }} -j ACCEPT
{%   else %}
-I FORWARD -i {{ internal[item]['interface'] }} -j ACCEPT
{%   endif %}
{% endfor %}
-I FORWARD -i {{ bridge_name }} -j ACCEPT
{% if ext_bridge_name %}
-I FORWARD -i {{ ext_bridge_name }} -j ACCEPT
{%   if external_static_ip is defined and external_static_ip %}
-I FORWARD -o {{ ext_bridge_name }} -s {{ external_static_ip | ansible.utils.ipaddr('network/prefix') }} -j ACCEPT
-I FORWARD -i {{ ext_bridge_name }} -d {{ external_static_ip | ansible.utils.ipaddr('network/prefix') }} -j ACCEPT
{%   endif %}
{% endif %}
{% for item in additional %}
-I FORWARD -i {{ item }} -j ACCEPT
{%   if 'bridge' in additional[item] and additional[item]['bridge'] %}
-I FORWARD -i {{ additional[item]['bridgename'] }} -j ACCEPT
{%   endif %}
{% endfor %}
#
{% if external_serve_dhcp is defined and (external_serve_dhcp==True or external_serve_dhcp|lower in ('yes', 'true')) %}
{%   if external_vlan is defined and external_vlan|int != 0 %}
-A ufw-before-input -p udp -m udp --dport 67 -i {{ external_if }}.{{ external_vlan }} -j ACCEPT
-A ufw-before-output -p udp -m udp --dport 68 -o {{ external_if }}.{{ external_vlan }} -j ACCEPT
{%   else %}
-A ufw-before-input -p udp -m udp --dport 67 -i {{ external_if }} -j ACCEPT
-A ufw-before-output -p udp -m udp --dport 68 -o {{ external_if }} -j ACCEPT
{%   endif %}
{% endif %}
-A ufw-before-input -p udp -m udp --dport 67 -i {{ bridge_name }} -j ACCEPT
-A ufw-before-output -p udp -m udp --dport 68 -o {{ bridge_name }} -j ACCEPT
-A ufw-before-input -p udp -m udp --dport 53 -i {{ bridge_name }} -j ACCEPT
-A ufw-before-output -p udp -m udp --dport 53 -o {{ bridge_name }} -j ACCEPT
-A ufw-before-input -p tcp --dport 53 -i {{ bridge_name }} -j ACCEPT
{% if ext_bridge_name %}
-A ufw-before-input -p udp -m udp --dport 67 -i {{ ext_bridge_name }} -j ACCEPT
-A ufw-before-output -p udp -m udp --dport 68 -o {{ ext_bridge_name }} -j ACCEPT
{% endif %}
{% for item in additional %}
{%   if 'serve_dhcp' in additional[item] and additional[item]['serve_dhcp'] %}
-A ufw-before-input -p udp -m udp --dport 67 -i {{ item }} -j ACCEPT
-A ufw-before-output -p udp -m udp --dport 68 -o {{ item }} -j ACCEPT
{%     if 'bridge' in additional[item] and additional[item]['bridge'] %}
-A ufw-before-input -p udp -m udp --dport 67 -i {{ additional[item]['bridgename'] }} -j ACCEPT
-A ufw-before-output -p udp -m udp --dport 68 -o {{ additional[item]['bridgename'] }} -j ACCEPT
-A ufw-before-input -p tcp --dport 8080 -i {{ additional[item]['bridgename'] }} -j ACCEPT
-A ufw-before-input -p udp -i {{ additional[item]['bridgename'] }} -d {{ additional[item]['local_ip'] }} -j ACCEPT
-A ufw-before-input -p tcp -i {{ additional[item]['bridgename'] }} -d {{ additional[item]['local_ip'] }} -j ACCEPT
{%     endif %}
{%   endif %}
-A ufw-before-input -p tcp --dport 8080 -i {{ item }} -j ACCEPT
{% endfor %}
-A ufw-before-input -i docker0 -j ACCEPT
-I INPUT -i vm-bridge -p tcp --dport 8000 -j ACCEPT
-I INPUT -i vm-bridge -p tcp --dport 8081 -j ACCEPT
COMMIT